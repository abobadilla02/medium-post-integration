I want to create a fullstack web app using Buffer's current tech stack:

Frontend:
- React + TypeScript
- Apollo Client (GraphQL)
- Styling with CSS Modules (optionally using Radix UI for base components)
- Use Storybook for documenting UI components

Backend:
- Node.js + TypeScript
- GraphQL API (Apollo Server or similar)
- MongoDB for storing user data and scheduled posts

Goal:
The app should allow a user to:
1. Write a post in a simple text editor
2. Choose a date/time to schedule it
3. Save that scheduled post to MongoDB
4. At the scheduled time, send the post to Medium using their API (https://github.com/Medium/medium-api-docs)

Features to implement first:
- Frontend form with title, content, and datetime picker
- Backend mutation to save scheduled post in MongoDB
- Background job (or simulated polling) to check for scheduled posts and publish them via Medium API
- Store Medium API token for the user (mock for now)

Nice-to-haves later:
- Medium OAuth login
- Toast notifications on post success
- Post history view

Please help me scaffold this project step by step, starting with the basic structure and focusing on the post creation and scheduling flow.
